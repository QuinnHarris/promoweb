= render :partial => 'order/menu'
= render :partial => 'items_menu'
= link_to("Create Product", :controller => :products, :action => :new)
- if no_address = (@order.customer.default_address.nil? or @order.customer.default_address.address_1.blank?)
  .admin CUSTOMER ADDRESS NOT ENTERED
- else
  |
  = link_to "Sample Order", { :action => :order_duplicate, :samples => true }, { :confirm => "Create new order with samples of current items" }
  |
  = link_to "FREE Sample Order", { :action => :order_duplicate, :samples => true, :free => true }, { :confirm => "Create new order with FREE samples of current items" }
  |
  = link_to "ReOrder", { :action => :order_duplicate }, { :confirm => "Create new reorder current items" }
- if @locked
  .admin
    The order has been Acknowledged so customer pricing can't be changed.
    = link_to "UNLOCK", { :order_id => @order.id, :unlock => true }, { :confirm => "Unlock this page to modify items even though the order has been acknowledged!!!" }
.invoice{ :id => "order-#{@order.id}" }
  - for supplier, purchase_list in @suppliers.to_a.sort_by { |s| s.first.name }
    .supplier
      %h2= "#{link_to(supplier.name, { :controller => '/admin/suppliers', :action => :detail, :id => supplier })} (#{format_supplier_info(supplier)})"
      - for purchase in purchase_list.sort_by { |pl| (pl.id || 0) }
        .purchase
          - form_for :order, @order, { :url => { :action => (purchase.new_record? ? :purchase_create : :purchase_mark), :id => (purchase.new_record? ? supplier.id : purchase.id), :order_id => @order } } do |order|
            - if purchase.new_record?
              %h2
                Purchase Order - 
                - if no_address
                  Can't create PO without Address
                - else
                  Create as
                  - for sub in [supplier] + supplier.children
                    = submit_tag("#{sub['name']}", :onclick => "return confirm('Are you sure you want to create a PO ?')")                 
            - else
              %h2
                Purchase for
                = purchase.supplier.name
                - if purchase.purchase_order.quickbooks_ref
                  (PO:
                  = purchase.purchase_order.quickbooks_ref
                  - if purchase.bill
                    Bill:
                    - if ReconciledItemTask.allowed?(@permissions) and !purchase.items.first.task_completed?(ReconciledItemTask)
                      = text_field_tag "Bill-#{purchase.bill.id}-quickbooks_ref", purchase.bill.quickbooks_ref, 'size' => 8
                    -else
                      = purchase.bill.quickbooks_ref                      
                  )
                - if purchase.supplier != supplier
                  = "(#{format_supplier_info(purchase.supplier)})"
                %div
                  = link_to image_tag('html.png'), :action => :po, :id => purchase
                  = link_to image_tag('pdf.png'), :action => :po, :id => purchase, :format => 'pdf'
              - if purchase.items.first.task_ready?(OrderSentItemTask)
                = submit_tag "Send by #{purchase.fax? ? 'FAX' : 'eMail'} #{OrderSentItemTask.status_name}"
                = submit_tag "Mark #{OrderSentItemTask.status_name} (Without email)"
              - elsif purchase.items.first.task_ready?(ReconciledItemTask)
                - if ReconciledItemTask.allowed?(@permissions)
                  = submit_tag ReconciledItemTask.status_name
                - else
                  = ReconciledItemTask.waiting_name
              - elsif purchase.items.first.task_completed?(ReconciledItemTask)
                %strong= ReconciledItemTask.completed_name
            - for item in purchase.items
              = render :partial => 'order_item', :locals => { :item => item, :poed => !purchase.new_record? }
            - unless purchase.new_record?
              .block.notes
                %strong Notes for Supplier:
                = text_field_tag "Purchase-#{purchase.id}-comment", purchase.comment, 'size' => 80
              = render :partial => 'order', :locals => { :order => purchase }
  = render :partial => 'order', :locals => { :order => @order }

- form_for :order, @order, { :url => { :action => :items_submit, :order_id => @order } } do |order|
  - unless @invoiced
    %hr
    = order.text_area :our_comments, 'cols' => 80, 'rows' => 10
    %br
    %hr
  = submit_options
