- if flash[:notice]
  .notice= flash[:notice]

- if @user
  = render :partial => 'pending_tasks'

- if @payment_methods.empty?
  - if @order.task_completed?(AcknowledgeOrderTask)
    #ack.nav
      %p You have acknowledged this order but must provide payment to proceed with the order.
  - elsif !@order.task_completed?(RequestOrderTask)
    %p
      Enter payment information below to place the order.  Otherwise click "Submit Quote" to request a quote.
      %br
      A future acknowledgment will be required before the order is put in production.

  = render :partial => 'payment_creditcard'
  %hr
  = link_to("Send a check for payment.", { :action => :payment_sendcheck, :order_id => @order }, { :confirm => "Aknowledge that you will mail a check as payment for this order." })

- else
  - if chargeable = (@user and @order.task_ready_completed?(FirstPaymentOrderTask, [PaymentInfoOrderTask]) and !@order.total_billable.zero?)
    :javascript
      function charge(form)
      {
        var string = form.getElementsByClassName('money')[0].value;
        var amount = parseMoney(string);
        if (!amount ||
            (amount > #{@order.total_billable.to_i.abs}) ||
            (amount < 0)) {
          alert('Amount must be between 0 and #{@order.total_billable}');
          return false;
        }
        if ((amount/multiplier).toFixed(2) != string) {
          alert("Amount must be of form xx.xx");
          return false;
        }

        return confirm('Apply Payment Source ' + displayMoney(amount) + '!');
      }

  - split_by_common(@payment_methods.sort_by { |m| (m.useable? ? 0 : 10000000) - m.id }) { |method| method.useable? }.each do |current, methods|
    %div{ :class => !current && 'lowlight' }
      - unless current
        %h1 Previous Payments
        %p Credit cards or checks listed below can not be charged.  We do not retain credit card information for more than 30 days after a customers order is closed.
      - for method in methods
        .item.info_block
          .block
            %h3= method.type_name
            - if method.has_name?
              %strong Name:
              = method.name
              %br
            - if method.has_number?
              %strong Number:
              = method.display_number
              %br
            %strong Date Added:
            = method.created_at.strftime("%Y-%m-%d")
            %br
            - if current and method.type_notes
              - for line in method.type_notes.split("\n")
                %div= line
            - if method.billing_id or method.transactions.empty?
              = link_to(image_tag('remove.png') + (method.transactions.empty? ? 'Remove' : 'Revoke'), payment_remove_order_path(@order, :method_id => method), :method => :post, :confirm => "Remove #{method.type_name} for #{method.name}")
            - if method.billing_id and !@order.task_completed?(PaymentInfoOrderTask)
              = link_to(image_tag('add.png') + 'Use as Payment', payment_use_order_path(@order, :method_id => method), :method => :post, :confirm => "Use #{method.type_name} for #{method.name} as payment information")

          = form_tag(payment_apply_admin_order_path(@order, :method_id => method.id, :txn_id => params[:txn_id]), :onsubmit => "return charge(this)") do
            %table.items
              %thead
                %tr
                  %td Date
                  %td Order
                  %td Amount
                  %td Comment
              %tbody
                - if chargeable and method.useable? and (@order.total_billable.to_i > 0 ? !method.creditable? : method.creditable?)
                  %tr{ :id => "method-#{method.id}" }
                    %td TODAY
                    %td= link_to @order.id, status_order_path(@order)
                    %td
                      = method.creditable? ? '-' : ''
                      = text_field :transaction, :amount, :value => @order.total_billable.abs, :size => 8, :class => 'money negative', :onkeypress => 'input_press(event)'
                    %td
                      = text_field :transaction, :comment
                    %td
                      = submit_tag method.creditable? ? "Credit" : "Charge"
                - for transaction in method.transactions
                  %tr
                    %td= transaction.created_at.strftime("%Y-%m-%d")
                    %td= link_to transaction.order_id, :action => :status_page, :id => transaction.order_id
                    - if transaction.is_a?(PaymentError)
                      %td{ :colspan => "2" }= transaction.message
                    - else
                      %td= transaction.amount.to_perty
                    %td
                      = transaction.comment
                    - if @user and transaction.method.refundable?
                      - if method.creditable? == transaction
                        %td Refunding
                      - elsif transaction.is_a?(PaymentCharge) and @order.total_billable.to_i < 0
                        %td= link_to "Refund", { :order_id => @order, :txn_id => transaction.id }

  %hr
  %div
    = link_to "Add Credit Card", :action => :payment_creditcard, :order_id => @order
    %br
    = link_to "Send a check for payment", payment_sendcheck_order_path(@order), { :method => :post, :confirm => "Aknowledge that you will mail a check as payment for this order." }
    - if @user && @order.total_billable.to_i < 0
      .admin
      = link_to "Send refund check", { :action => :payment_sendcheck, :order_id => @order, :refund => true }, { :confirm => "A refund check will be sent to the customer." }

  %hr
  = form_for PaymentMethod.new, :url => payment_submit_order_path(@order) do
    != submit_options false
