- for hash in @tasks
  - tasks, deligate, blocked = [:complete, :delegate, :blocked].collect { |v| hash[v] }
  - task = tasks.last
  .admin.action
    - unless blocked
      - if task.action_name # Inline Task Execute
        - title = tasks.collect { |t| t.action_name }.join(' and ')
        - if order_item = task.object.is_a?(OrderItem) and !task.object.new_record?
          - title += " (#{task.object.description})"
        - if task.respond_to?(:our_comment)
          - task = task.object.task_find_inactive(task.class) || task if task.new_record?
          = form_for(task, :as => :data, :url => task_execute_admin_order_path(@order, :object_id => task.object, :tasks => tasks.collect { |t| t.class })) do |t|
            %h2!= title
            = t.text_area :our_comment, 'cols' => 120, 'rows' => 10
            %br
            = submit_tag 'Completed'
            - if task.respond_to?(:email_complete)
              = submit_tag 'Completed (Without Email)'
            = submit_tag 'Save'
        - else # No template, do link
          - uri = task_execute_admin_order_url(@order, :object_id => task.object.id, :tasks => tasks.collect { |t| t.class })
          = link_to(uri, :method => :put) do
            != title
          - if task.respond_to?(:email_complete)
            = link_to "(WITHOUT EMAIL)", uri.merge(:without_email => true), :method => :put

      - else # Link to task page
        %span= link_to_task(task.status_name, task)
      - if deligate and !(users = deligate.delegatable_users(session[:user_id])).empty?
        .delegate
          then delegate
          != deligate.action_name
          to:
          %ul
          - for user in users
            %li= link_to user.name, { :controller => '/admin/orders', :action => :task_execute, :order_id => @order, :tasks => tasks.collect { |t| t.class }, :delegate_perm => user.delegatables.first.name, :user_id => user.id }, :class => 'action'

    - else # if blocked
      %span
        != task.action_name
        BLOCKED because:
        %strong= blocked

    - unless (users = tasks.last.delegatable_users(session[:user_id])).empty?
      .delegate
        or delegate to:
        %ul
        - for user in users
          %li= link_to user.name, { :controller => '/admin/orders', :action => :task_execute, :order_id => @order, :delegate_perm => user.delegatables.first.name, :user_id => user.id }, :class => 'action'

    - if task.complete_estimate
      = form_for task, { :as => :task, :url =>  task_comment_admin_order_path(@order, :object_id => task.object, :class => tasks.last.class), :html => { :method => :post } } do |t|
        %hr
        = t.text_area :comment, 'cols' => 120, 'rows' => 2         
        %div
          Completion:
          - ['30m', '1h', '2h', '4h', 'EOD', '1d', '2d', '3d', '4d', '5d'].each do |name|
            = submit_tag name
          |
          != calendar_input_time('task[expected_at]', t.object.complete_at.strftime('%Y-%m-%d %H:%M'), {}, {}, "_#{task.class}")
          = submit_tag 'Apply'
          - unless task.new_record?
            X


- if @revokable and !@revokable.empty?
  .admin.action
    %span
      %strong Revoke: 
    - for task in @revokable
      = link_to(task_revoke_admin_order_path(@order, :task_id => task, :class => task.class), :method => :delete, :confirm => "Revoke #{task.status_name} task?") do
        = image_tag('remove.png')
        = task.status_name
        - if task.is_a?(OrderItemTask)
          %strong for
          = task.object.product.name
